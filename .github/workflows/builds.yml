name: Builds

# See https://github.com/paddy-exe/GDExtensionSummator/blob/main/.github/workflows/builds.yml

on: [push, pull_request]

env:
  LIBNAME: depths

concurrency: 
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-macos
  cancel-in-progress: true

jobs:
  build:
    runs-on:  ${{matrix.os}}
    name: ${{matrix.name}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: windows-debug
            os: ubuntu-latest
            runner: ubuntu-20.04
            name: üèÅ Windows Debug
            target: template_debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            os: ubuntu-latest
            runner: ubuntu-20.04
            name: üèÅ Windows Release
            target: template_release
            platform: windows
            arch: x86_64
          # - identifier: macos-debug
          #   os: macos-latest
          #   name: üçé macOS (universal) Debug
          #   target: template_debug
          #   platform: macos
          #   arch: universal
          # - identifier: macos-release
          #   os: macos-latest
          #   name: üçé macOS (universal) Release
          #   target: template_release
          #   platform: macos
          #   arch: universal
          # - identifier: linux-debug
          #   os: ubuntu-latest
          #   name: üêß Linux Debug
          #   runner: ubuntu-20.04
          #   target: template_debug
          #   platform: linux
          #   arch: x86_64
          # - identifier: linux-release
          #   os: ubuntu-latest
          #   name: üêß Linux Release
          #   runner: ubuntu-20.04
          #   target: template_release
          #   platform: linux
          #   arch: x86_64

    steps:

      - name: Checkout project
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache SCons and Python dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.scons_cache
            ~/.cache/pip
          key: ${{ runner.os }}-scons-${{ hashFiles('**/SConstruct') }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version

      - name: Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config

      - name: Install MinGW
        if: ${{ matrix.platform == 'windows' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq mingw-w64

      - name: Compile Extension
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' use_mingw=yes

      - name: Delete compilation files
        if: ${{ matrix.platform == 'windows' }}
        run: |
          rm -f project/addons/divine_tools/bin/${{ matrix.platform }}/*.{exp,lib,pdb}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: '${{ env.LIBNAME }}.${{ matrix.platform }}.${{ matrix.target }}.${{ matrix.arch }}.zip'
          path: 'project/addons/divine_tools/bin/${{ matrix.platform }}'

      - name: Archive Release
        if: success() && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: '${{ env.LIBNAME }}.${{ matrix.platform }}.${{ matrix.target }}.${{ matrix.arch }}.zip'
          path: 'game/bin/'

      - name: Create and upload asset
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{ env.LIBNAME }}.${{ matrix.platform }}.${{ matrix.target }}.${{ matrix.arch }}.zip"
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')